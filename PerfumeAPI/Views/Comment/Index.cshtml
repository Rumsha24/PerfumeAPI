@model IEnumerable<PerfumeAPI.Models.Entities.Comment>
@using System.Security.Claims
@{
    ViewData["Title"] = "Product Reviews";
}

<div class="container py-4">
    <h1 class="mb-4">Customer Reviews</h1>

    <div class="row">
        <!-- Reviews List -->
        <div class="col-md-8">
            @if (!Model.Any())
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> No reviews yet. Be the first to review!
                </div>
            }
            else
            {
                @foreach (var comment in Model)
                {
                    <div class="card mb-3 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <h5 class="card-title mb-1">@comment.User?.UserName</h5>
                                <div class="text-warning">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="@(i <= comment.Rating ? "fas" : "far") fa-star"></i>
                                    }
                                </div>
                            </div>
                            <small class="text-muted d-block mb-2">
                                @comment.CreatedAt.ToString("MMMM d, yyyy")
                            </small>
                            <p class="card-text">@comment.Text</p>

                            @if (comment.Images?.Any() == true)
                            {
                                <div class="d-flex flex-wrap gap-2 mt-3">
                                    @foreach (var image in comment.Images)
                                    {
                                        <a href="@image.ImageUrl" data-lightbox="comment-@comment.Id" data-title="Review image">
                                            <img src="@image.ImageUrl" class="img-thumbnail"
                                                 style="width:100px;height:100px;object-fit:cover">
                                        </a>
                                    }
                                </div>
                            }

                            @if (User.Identity?.IsAuthenticated == true && User.FindFirst(ClaimTypes.NameIdentifier)?.Value == comment.UserId)
                            {
                                <form asp-action="Delete" method="post" class="mt-3">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@comment.Id">
                                    <button type="submit" class="btn btn-sm btn-danger"
                                            onclick="return confirm('Are you sure you want to delete this review?')">
                                        <i class="fas fa-trash me-1"></i> Delete
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                }
            }
        </div>

        <!-- Review Form -->
        <div class="col-md-4">
            @if (User.Identity?.IsAuthenticated == true)
            {
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Write a Review</h5>
                    </div>
                    <div class="card-body">
                        <form asp-action="Create" method="post" enctype="multipart/form-data" id="reviewForm">
                            @Html.AntiForgeryToken()

                            <div class="mb-3">
                                <label class="form-label">Rating *</label>
                                <select name="Rating" class="form-select" required>
                                    <option value="">Select...</option>
                                    <option value="1">1 Star</option>
                                    <option value="2">2 Stars</option>
                                    <option value="3">3 Stars</option>
                                    <option value="4">4 Stars</option>
                                    <option value="5" selected>5 Stars</option>
                                </select>
                                <span class="text-danger" data-valmsg-for="Rating"></span>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Your Review *</label>
                                <textarea name="Text" class="form-control" rows="4" required></textarea>
                                <span class="text-danger" data-valmsg-for="Text"></span>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Upload Images (max 3)</label>
                                <input type="file" name="Images" multiple accept="image/*" class="form-control">
                                <small class="text-muted">Maximum 3 images (5MB each)</small>
                                <span class="text-danger" data-valmsg-for="Images"></span>
                            </div>

                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-paper-plane me-2"></i> Submit Review
                            </button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="card shadow">
                    <div class="card-body text-center">
                        <h5 class="card-title mb-3">Share Your Experience</h5>
                        <p class="card-text mb-4">Sign in to leave a product review</p>
                        <a asp-controller="Account" asp-action="Login" class="btn btn-primary">
                            <i class="fas fa-sign-in-alt me-2"></i> Sign In
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <!-- Lightbox for images -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>

    <!-- Validation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <!-- Custom validation -->
    <script>
        $(document).ready(function() {
            // Initialize lightbox
            lightbox.option({
                'resizeDuration': 200,
                'wrapAround': true,
                'albumLabel': 'Image %1 of %2'
            });

            // Custom validation for file uploads
            $.validator.addMethod("maxfiles", function(value, element, param) {
                if (element.files.length > param) return false;
                return true;
            });

            $.validator.addMethod("filesize", function(value, element, param) {
                if (element.files.length > 0) {
                    for (var i = 0; i < element.files.length; i++) {
                        if (element.files[i].size > param) return false;
                    }
                }
                return true;
            });

            $.validator.addMethod("filetype", function(value, element, param) {
                if (element.files.length > 0) {
                    for (var i = 0; i < element.files.length; i++) {
                        var extension = element.files[i].name.split('.').pop().toLowerCase();
                        if ($.inArray(extension, param) === -1) return false;
                    }
                }
                return true;
            });

            $("#reviewForm").validate({
                rules: {
                    Images: {
                        maxfiles: 3,
                        filesize: 5242880, // 5MB
                        filetype: ["jpg", "jpeg", "png", "gif"]
                    }
                },
                messages: {
                    Images: {
                        maxfiles: "Maximum 3 images allowed",
                        filesize: "Each image must be smaller than 5MB",
                        filetype: "Only JPG, PNG or GIF images are allowed"
                    }
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.mb-3').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });
    </script>
}