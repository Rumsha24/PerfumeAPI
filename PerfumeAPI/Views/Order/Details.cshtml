@model PerfumeAPI.Models.Entities.Order
@{
    ViewData["Title"] = $"Order #{Model.OrderNumber}";
}

<div class="container my-5">
    <!-- Order Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-6 fw-bold">
            <i class="fas fa-receipt me-2 text-primary"></i> Order #@Model.OrderNumber
        </h1>
        <span class="badge @GetStatusBadgeClass(Model.Status) fs-6 px-3 py-2">
            @Model.Status
        </span>
    </div>

    <!-- Order Timeline -->
    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <div class="stepper-wrapper">
                <div class="stepper-item @(Model.Status == "Processing" ? "active" : "completed")">
                    <div class="step-counter">
                        <i class="fas fa-clipboard-list"></i>
                    </div>
                    <div class="step-name">Processing</div>
                    <div class="step-date">@Model.OrderDate.ToString("MMM dd")</div>
                </div>
                <div class="stepper-item @(Model.Status == "Shipped" ? "active" : (Model.Status == "Delivered" ? "completed" : ""))">
                    <div class="step-counter">
                        <i class="fas fa-shipping-fast"></i>
                    </div>
                    <div class="step-name">Shipped</div>
                    @if (Model.Status == "Shipped" || Model.Status == "Delivered")
                    {
                        <div class="step-date">@(Model.ShippedDate?.ToString("MMM dd") ?? "Pending")</div>
                    }
                </div>
                <div class="stepper-item @(Model.Status == "Delivered" ? "active" : "")">
                    <div class="step-counter">
                        <i class="fas fa-home"></i>
                    </div>
                    <div class="step-name">Delivered</div>
                    @if (Model.Status == "Delivered")
                    {
                        <div class="step-date">@Model.DeliveredDate?.ToString("MMM dd")</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Order Summary -->
        <div class="col-lg-8 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-boxes me-2"></i>Order Items</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th style="width: 60px"></th>
                                    <th>Product</th>
                                    <th class="text-end">Price</th>
                                    <th class="text-end">Qty</th>
                                    <th class="text-end">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>
                                            <img src="@(item.Product?.ImageUrl ?? "/images/default-perfume.jpg")"
                                                 class="img-thumbnail border-0"
                                                 style="width: 50px; height: 50px; object-fit: cover"
                                                 onerror="this.onerror=null;this.src='/images/default-perfume.jpg'">
                                        </td>
                                        <td>
                                            <strong>@item.Product?.Name</strong><br>
                                            <small class="text-muted">@item.Product?.FragranceType</small>
                                        </td>
                                        <td class="text-end align-middle">@item.PriceAtPurchase.ToString("C")</td>
                                        <td class="text-end align-middle">@item.Quantity</td>
                                        <td class="text-end align-middle">@((item.Quantity * item.PriceAtPurchase).ToString("C"))</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Details -->
        <div class="col-lg-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal:</span>
                        <span>@Model.Items.Sum(i => i.Quantity * i.PriceAtPurchase).ToString("C")</span>
                    </div>
                    @* Removed ShippingCost and Discount references *@
                    <hr>
                    <div class="d-flex justify-content-between fw-bold fs-5">
                        <span>Total:</span>
                        <span>@Model.TotalAmount.ToString("C")</span>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-truck me-2"></i>Shipping Details</h5>
                </div>
                <div class="card-body">
                    <h6 class="mb-2">Shipping Address</h6>
                    <p class="mb-4">@Model.ShippingAddress</p>

                    @* Removed TrackingNumber and TrackingUrl references *@
                </div>
            </div>
        </div>
    </div>

    <!-- Order Actions -->
    <div class="d-flex justify-content-between mt-4">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to Orders
        </a>

        @if (Model.Status == "Processing")
        {
            <form asp-action="CancelOrder" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id">
                <button type="submit" class="btn btn-danger"
                        onclick="return confirm('Are you sure you want to cancel this order?')">
                    <i class="fas fa-times-circle me-1"></i> Cancel Order
                </button>
            </form>
        }
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Processing" => "bg-warning text-dark",
            "Shipped" => "bg-info text-white",
            "Delivered" => "bg-success text-white",
            "Cancelled" => "bg-danger text-white",
            "Returned" => "bg-secondary text-white",
            _ => "bg-light text-dark"
        };
    }
}

@section Styles {
    <style>
        .stepper-wrapper {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .stepper-item {
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            flex: 1;
        }

            .stepper-item::before {
                position: absolute;
                content: "";
                border-bottom: 2px solid #dee2e6;
                width: 100%;
                top: 20px;
                left: -50%;
                z-index: 2;
            }

            .stepper-item::after {
                position: absolute;
                content: "";
                border-bottom: 2px solid #dee2e6;
                width: 100%;
                top: 20px;
                left: 50%;
                z-index: 2;
            }

            .stepper-item:first-child::before,
            .stepper-item:last-child::after {
                content: none;
            }

        .step-counter {
            position: relative;
            z-index: 5;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #e9ecef;
            color: #6c757d;
            margin-bottom: 6px;
        }

        .stepper-item.active .step-counter {
            background: #0d6efd;
            color: white;
        }

        .stepper-item.completed .step-counter {
            background: #198754;
            color: white;
        }

        .stepper-item.completed::before {
            border-bottom: 2px solid #198754;
        }

        .step-name {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .step-date {
            font-size: 0.7rem;
            color: #6c757d;
            margin-top: 4px;
        }

        .table th {
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.5px;
            color: #6c757d;
        }
    </style>
}