@model PerfumeAPI.Models.Entities.Product
@using Microsoft.AspNetCore.Identity
@inject UserManager<PerfumeAPI.Models.Entities.User> UserManager
@using System.Security.Claims

@{
    ViewData["Title"] = Model.Name;
    var validComments = Model.Comments?.Where(c => c != null).ToList() ?? new List<PerfumeAPI.Models.Entities.Comment>();
    var hasReviews = validComments.Any();
    var avgRating = hasReviews ? validComments.Average(c => c.Rating) : 0;
    var reviewCount = validComments.Count;
}

<div class="container my-5">
    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mb-4">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-4">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Product Header Section -->
    <div class="row g-4">
        <div class="col-lg-6">
            <div class="product-image-container position-relative">
                <img src="@(Model.ImageUrl ?? "/images/default-perfume.jpg")"
                     class="img-fluid rounded-3 main-product-image"
                     alt="@Model.Name"
                     onerror="this.onerror=null;this.src='/images/default-perfume.jpg';">

                @if (Model.IsFeatured)
                {
                    <span class="position-absolute top-0 start-0 badge bg-danger mt-3 ms-3">
                        <i class="fas fa-crown me-1"></i> Featured
                    </span>
                }
                @if (Model.IsLowStock)
                {
                    <span class="position-absolute top-0 end-0 badge bg-warning text-dark mt-3 me-3">
                        <i class="fas fa-exclamation-circle me-1"></i> Low Stock
                    </span>
                }
            </div>

            <!-- Thumbnail Images -->
            <div class="thumbnails mt-3 d-flex flex-wrap gap-2">
                <div class="thumbnail-item border rounded-2 p-1">
                    <img src="@(Model.ImageUrl ?? "/images/default-perfume.jpg")"
                         class="img-thumbnail cursor-pointer"
                         style="width:80px;height:80px;object-fit:cover;"
                         alt="@Model.Name"
                         onclick="changeMainImage(this.src)">
                </div>
                <!-- Additional thumbnails can be added here -->
            </div>
        </div>

        <div class="col-lg-6">
            <div class="product-details">
                <h1 class="mb-2">@Model.Name</h1>
                <p class="text-muted mb-3">
                    <i class="fas fa-tag me-1"></i> @Model.FragranceType
                    @if (!string.IsNullOrEmpty(Model.FragranceFamily))
                    {
                        <span> | @Model.FragranceFamily</span>
                    }
                    | <i class="fas fa-weight-hanging me-1"></i> @Model.Size
                </p>

                <!-- Rating Section -->
                <div class="rating mb-3 d-flex align-items-center">
                    <div class="stars me-2">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="@(i <= Math.Round(avgRating) ? "fas text-warning" : "far text-secondary") fa-star"></i>
                        }
                    </div>
                    <span class="text-muted">(@reviewCount review@(reviewCount == 1 ? "" : "s"))</span>
                </div>

                <!-- Price Section -->
                <div class="price-section mb-4">
                    <h3 class="text-primary mb-1">@Model.Price.ToString("C")</h3>
                    <p class="text-muted small mb-2">
                        <i class="fas fa-shipping-fast me-1"></i> + @Model.ShippingCost.ToString("C") shipping
                        @if (Model.ShippingCost == 0)
                        {
                            <span class="text-success ms-2"><i class="fas fa-check-circle"></i> Free shipping available</span>
                        }
                    </p>
                </div>

                <!-- Stock Status -->
                <div class="stock-status mb-4">
                    @if (Model.StockQuantity > 0)
                    {
                        <p class="text-success">
                            <i class="fas fa-check-circle me-1"></i> In Stock (@Model.StockQuantity available)
                        </p>
                    }
                    else
                    {
                        <p class="text-danger">
                            <i class="fas fa-times-circle me-1"></i> Currently Out of Stock
                        </p>
                    }
                </div>

                <!-- Add to Cart Section -->
                <div class="add-to-cart-section mb-4">
                    @if (Model.StockQuantity > 0)
                    {
                        <form method="post" asp-controller="Cart" asp-action="AddToCart" class="w-100 d-flex align-items-center">
                            @Html.AntiForgeryToken()

                            <input type="hidden" name="productId" value="@Model.Id" />

                            <div class="input-group me-3" style="width: 140px;">
                                <button class="btn btn-outline-secondary decrement" type="button">
                                    <i class="fas fa-minus"></i>
                                </button>

                                <input type="number" name="quantity" class="form-control text-center quantity" value="1" min="1" max="@Model.StockQuantity" />

                                <button class="btn btn-outline-secondary increment" type="button">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>

                            <button type="submit" class="btn btn-primary btn-lg flex-grow-1">
                                <i class="fas fa-cart-plus me-2"></i>Add to Cart
                            </button>
                        </form>
                    }
                    else
                    {
                        <p class="text-danger fw-bold">Out of Stock</p>
                    }
                </div>

                    else
                    {
                        <button class="btn btn-secondary btn-lg w-100" disabled>
                            <i class="fas fa-times-circle me-2"></i>Out of Stock
                        </button>
                    }
                </div>

                <!-- Product Highlights -->
                <div class="product-highlights mb-4">
                    <h5 class="mb-3"><i class="fas fa-bolt me-2 text-primary"></i>Product Highlights</h5>
                    <ul class="list-unstyled">
                        <li class="mb-2"><i class="fas fa-check-circle text-success me-2"></i> Premium quality ingredients</li>
                        <li class="mb-2"><i class="fas fa-check-circle text-success me-2"></i> Long-lasting fragrance</li>
                        <li class="mb-2"><i class="fas fa-check-circle text-success me-2"></i> Vegan & cruelty-free</li>
                    </ul>
                </div>

                <!-- Admin Edit Button -->
                @if (User.IsInRole("Admin"))
                {
                    <div class="admin-actions mt-4">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-warning">
                            <i class="fas fa-edit me-1"></i> Edit Product
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Product Tabs -->
    <div class="product-tabs mt-5">
        <ul class="nav nav-tabs" id="productTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab">
                    <i class="fas fa-file-alt me-2"></i>Description
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab">
                    <i class="fas fa-info-circle me-2"></i>Details
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab">
                    <i class="fas fa-star me-2"></i>Reviews (@reviewCount)
                </button>
            </li>
        </ul>

        <div class="tab-content p-4 border border-top-0 rounded-bottom" id="productTabsContent">
            <!-- Description Tab -->
            <div class="tab-pane fade show active" id="description" role="tabpanel">
                <h4 class="mb-3">About This Fragrance</h4>
                <p class="lead">@Model.Description</p>
                <div class="row mt-4">
                    <div class="col-md-6">
                        <h5><i class="fas fa-spa me-2 text-primary"></i>Fragrance Notes</h5>
                        <ul class="list-unstyled">
                            <li class="mb-2"><strong>Top Notes:</strong> Bergamot, Lemon, Green Notes</li>
                            <li class="mb-2"><strong>Middle Notes:</strong> Jasmine, Rose, Lily of the Valley</li>
                            <li class="mb-2"><strong>Base Notes:</strong> Sandalwood, Musk, Amber</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h5><i class="fas fa-flask me-2 text-primary"></i>Technical Details</h5>
                        <ul class="list-unstyled">
                            <li class="mb-2"><strong>Size:</strong> @Model.Size</li>
                            <li class="mb-2"><strong>Fragrance Type:</strong> @Model.FragranceType</li>
                            <li class="mb-2"><strong>Intensity:</strong> Moderate to Strong</li>
                            <li class="mb-2"><strong>Longevity:</strong> 6-8 hours</li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Details Tab -->
            <div class="tab-pane fade" id="details" role="tabpanel">
                <div class="row">
                    <div class="col-md-6">
                        <h4 class="mb-3">Product Specifications</h4>
                        <table class="table">
                            <tbody>
                                <tr>
                                    <th scope="row">Brand</th>
                                    <td>Noire Essence</td>
                                </tr>
                                <tr>
                                    <th scope="row">Fragrance Family</th>
                                    <td>@(Model.FragranceFamily ?? "Not specified")</td>
                                </tr>
                                <tr>
                                    <th scope="row">Size</th>
                                    <td>@Model.Size</td>
                                </tr>
                                <tr>
                                    <th scope="row">Shipping Weight</th>
                                    <td>@(Model.Size.Contains("100ml") ? "150g" : Model.Size.Contains("50ml") ? "100g" : "120g")</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h4 class="mb-3">Shipping & Returns</h4>
                        <div class="card border-0 bg-light">
                            <div class="card-body">
                                <h5 class="card-title"><i class="fas fa-shipping-fast text-primary me-2"></i>Delivery Information</h5>
                                <p class="card-text">
                                    Standard shipping: @Model.ShippingCost.ToString("C")<br>
                                    Free shipping on orders over $100<br>
                                    Estimated delivery: 3-5 business days
                                </p>
                                <h5 class="card-title mt-3"><i class="fas fa-undo text-primary me-2"></i>Return Policy</h5>
                                <p class="card-text">
                                    30-day return policy<br>
                                    Free returns for unopened items
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reviews Tab -->
            <div class="tab-pane fade" id="reviews" role="tabpanel">
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <div class="card mb-4 border-primary">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0"><i class="fas fa-pen me-2"></i>Write a Review</h5>
                        </div>
                        <div class="card-body">
                            <form asp-action="AddComment" asp-controller="Product" method="post">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="productId" value="@Model.Id">
                                <div class="mb-3">
                                    <label class="form-label">Your Rating</label>
                                    <div class="rating-input">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="far fa-star @(i <= 5 ? "text-warning" : "")" data-rating="@i" style="cursor: pointer; font-size: 1.5rem;"></i>
                                        }
                                        <input type="hidden" name="rating" id="selectedRating" value="5">
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Your Review</label>
                                    <textarea name="text" class="form-control" rows="4" placeholder="Share your experience with this product..." required></textarea>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Upload Photos (Optional)</label>
                                    <input type="file" class="form-control" name="reviewImages" multiple accept="image/*">
                                    <div class="form-text">Maximum 3 images, 5MB each</div>
                                </div>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane me-1"></i> Submit Review
                                </button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-info mb-4">
                        <i class="fas fa-info-circle me-2"></i>
                        <a href="/Account/Login?returnUrl=@Context.Request.Path" class="alert-link">Sign in</a> to leave a review.
                    </div>
                }

                <h4 class="mb-4">Customer Reviews</h4>

                @if (hasReviews)
                {
                    <div class="reviews-list">
                        @foreach (var comment in validComments.OrderByDescending(c => c.CreatedAt))
                        {
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between mb-2">
                                        <div>
                                            <h5 class="card-title mb-1">@comment.User?.FullName</h5>
                                            <small class="text-muted">@comment.CreatedAt.ToString("MMMM dd, yyyy")</small>
                                        </div>
                                        <div class="text-warning">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="@(i <= comment.Rating ? "fas" : "far") fa-star"></i>
                                            }
                                        </div>
                                    </div>
                                    <p class="card-text mt-3">@comment.Text</p>

                                    @if (comment.Images?.Any() == true)
                                    {
                                        <div class="review-images mt-3 d-flex flex-wrap gap-2">
                                            @foreach (var image in comment.Images.Take(3))
                                            {
                                                <a href="@image.ImageUrl" data-lightbox="review-@comment.Id" data-title="@comment.User?.FullName's review">
                                                    <img src="@image.ImageUrl" class="img-thumbnail" style="width:100px;height:100px;object-fit:cover" alt="Review photo">
                                                </a>
                                            }
                                        </div>
                                    }

                                    @if (User.Identity?.IsAuthenticated == true && User.FindFirst(ClaimTypes.NameIdentifier)?.Value == comment.UserId)
                                    {
                                        <div class="mt-3">
                                            <form asp-action="Delete" asp-controller="Comment" method="post">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@comment.Id">
                                                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this review?')">
                                                    <i class="fas fa-trash-alt me-1"></i> Delete Review
                                                </button>
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i> No reviews yet. Be the first to review!
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            // Initialize lightbox
            lightbox.option({
                'resizeDuration': 200,
                'wrapAround': true,
                'albumLabel': 'Image %1 of %2'
            });

            // Quantity controls
            $('.increment').click(function () {
                const $input = $(this).siblings('.quantity');
                let value = parseInt($input.val()) || 1;
                const max = parseInt($input.attr('max')) || 100;
                if (value < max) {
                    $input.val(value + 1);
                    animateQuantityChange($input);
                }
            });

            $('.decrement').click(function () {
                const $input = $(this).siblings('.quantity');
                let value = parseInt($input.val()) || 1;
                if (value > 1) {
                    $input.val(value - 1);
                    animateQuantityChange($input);
                }
            });

            function animateQuantityChange($input) {
                $input.addClass('quantity-change');
                setTimeout(() => {
                    $input.removeClass('quantity-change');
                }, 300);
            }

            // Rating stars
            $('.rating-input i').hover(function () {
                const rating = $(this).data('rating');
                $(this).prevAll().addBack().removeClass('far').addClass('fas');
                $(this).nextAll().removeClass('fas').addClass('far');
            });

            $('.rating-input i').click(function () {
                const rating = $(this).data('rating');
                $(this).prevAll().addBack().removeClass('far').addClass('fas');
                $(this).nextAll().removeClass('fas').addClass('far');
                $('#selectedRating').val(rating);
            });

            // Add to cart
            $('.add-to-cart').click(function () {
                const productId = $(this).data('id');
                const productName = $(this).data('name');
                const productPrice = $(this).data('price');
                const quantity = parseInt($('.quantity').val()) || 1;

                $.post('/Cart/AddToCart', { productId: productId, quantity: quantity })
                    .done(function (response) {
                        updateCartCount(response.cartItemCount);

                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            html: `<strong>${productName}</strong><br>Quantity: ${quantity}<br>Price: ${(productPrice * quantity).toFixed(2)}`,
                            showConfirmButton: true,
                            timer: 2000,
                            position: 'bottom-end'
                        });
                    })
                    .fail(function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Please log in to add items to your cart.',
                            confirmButtonText: 'Login',
                            showCancelButton: true,
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/Account/Login?returnUrl=' + window.location.pathname;
                            }
                        });
                    });
            });

            // Change main image when thumbnail is clicked
            function changeMainImage(src) {
                $('.main-product-image').attr('src', src);
            }

            // Update cart count in navbar
            function updateCartCount(count) {
                $('.cart-count').text(count).addClass('animate__animated animate__bounceIn');
                setTimeout(() => {
                    $('.cart-count').removeClass('animate__animated animate__bounceIn');
                }, 1000);
            }

            $(document).ready(function () {
            // Updated quantity change handler
            function animateQuantityChange($input) {
                $input.addClass('quantity-change');
                setTimeout(() => {
                    $input.removeClass('quantity-change');
                }, 300);
            }
        });
    </script>

    <style>
        .product-image-container {
            background-color: #f8f9fa;
            border-radius: 10px;
            overflow: hidden;
            height: 400px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .main-product-image {
            max-height: 100%;
            max-width: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }

            .main-product-image:hover {
                transform: scale(1.05);
            }

        .thumbnails {
            margin-top: 15px;
        }

        .thumbnail-item {
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .thumbnail-item:hover {
                border-color: #C9184A !important;
                transform: translateY(-3px);
            }

        .quantity-change {
            animation: pulse 0.3s ease;
        }

        .quantity-change {
            transform: scale(1.1);
            transition: transform 0.3s ease;
        }

        .product-image-container {
            background-color: #f8f9fa;
            border-radius: 10px;
            overflow: hidden;
            height: 400px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .main-product-image {
            max-height: 100%;
            max-width: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }

            .main-product-image:hover {
                transform: scale(1.05);
            }

        .thumbnail-item {
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .thumbnail-item:hover {
                border-color: #C9184A !important;
                transform: translateY(-3px);
            }

        .nav-tabs .nav-link {
            color: #495057;
            font-weight: 500;
            padding: 12px 20px;
        }

            .nav-tabs .nav-link.active {
                color: #C9184A;
                border-color: #C9184A;
                background-color: #fff0f3;
            }

        .rating-input i {
            transition: all 0.2s ease;
        }

            .rating-input i:hover {
                transform: scale(1.2);
            }

        .review-images img {
            transition: all 0.3s ease;
        }

            .review-images img:hover {
                transform: scale(1.05);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        .quantity {
            font-weight: 600;
            text-align: center;
        }

        .input-group button {
            width: 40px;
        }

        .product-highlights li {
            padding: 5px 0;
        }

        .animate__bounceIn {
            --animate-duration: 0.5s;
        }
    </style>
}