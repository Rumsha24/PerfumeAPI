@model IEnumerable<PerfumeAPI.Models.Entities.Product>
@{
    ViewData["Title"] = "Our Fragrance Collection";
    Layout = "_Layout";
}

<div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-5 fw-bold text-dark">Our Fragrance Collection</h1>
        <div class="d-flex">
            <!-- Sort Dropdown -->
            <div class="dropdown me-2">
                <button class="btn btn-outline-dark dropdown-toggle" type="button"
                        id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-sort me-1"></i> Sort By
                </button>
                <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                    <li><a class="dropdown-item" href="?sort=price_asc"><i class="fas fa-sort-amount-down-alt me-2"></i>Price: Low to High</a></li>
                    <li><a class="dropdown-item" href="?sort=price_desc"><i class="fas fa-sort-amount-down me-2"></i>Price: High to Low</a></li>
                    <li><a class="dropdown-item" href="?sort=newest"><i class="fas fa-star me-2"></i>Newest First</a></li>
                    <li><a class="dropdown-item" href="?sort=featured"><i class="fas fa-award me-2"></i>Featured Items</a></li>
                </ul>
            </div>

            <!-- Search Box -->
            <div class="input-group" style="width: 250px;">
                <input type="text" class="form-control" placeholder="Search fragrances..."
                       id="searchInput" value="@Context.Request.Query["search"]">
                <button class="btn btn-outline-dark" type="button" id="searchButton">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-warning text-center py-5">
            <i class="fas fa-exclamation-circle fa-3x mb-3 text-warning"></i>
            <h3>No Fragrances Found</h3>
            <p class="mb-0">We couldn't find any products matching your criteria.</p>
            <a href="@Url.Action("Index")" class="btn btn-outline-primary mt-3">
                <i class="fas fa-undo me-1"></i> Reset Filters
            </a>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var product in Model)
            {
                <div class="col mb-4">
                    <div class="card h-100 perfume-card shadow-sm">
                        <!-- Badges -->
                        @if (product.IsFeatured)
                        {
                            <span class="position-absolute top-0 end-0 badge bg-danger mt-2 me-2">
                                <i class="fas fa-crown me-1"></i> Featured
                            </span>
                        }
                        @if (product.StockQuantity <= 10)
                        {
                            <span class="position-absolute top-0 start-0 badge bg-warning text-dark mt-2 ms-2">
                                <i class="fas fa-exclamation-circle me-1"></i> Low Stock
                            </span>
                        }

                        <!-- Product Image -->
                        <div class="product-image-container">
                            <img src="@product.ImageUrl"
                                 class="card-img-top p-3"
                                 alt="@product.Name"
                                 loading="lazy"
                                 onerror="this.onerror=null;this.src='/images/default-perfume.jpg'">
                        </div>

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>

                            <!-- Rating -->
                            <div class="d-flex align-items-center mb-2">
                                @if (product.Comments?.Any() ?? false)
                                {
                                    var avgRating = product.Comments.Average(c => c.Rating);
                                    <div class="text-warning me-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(i <= avgRating ? "fas" : "far") fa-star"></i>
                                        }
                                    </div>
                                    <small class="text-muted">(@product.Comments.Count)</small>
                                }
                                else
                                {
                                    <small class="text-muted">No reviews yet</small>
                                }
                            </div>

                            <!-- Fragrance Details -->
                            <p class="card-text text-muted small mb-2">
                                <i class="fas fa-tag me-1"></i> @product.FragranceType
                                @if (!string.IsNullOrEmpty(product.FragranceFamily))
                                {
                                    <span> | @product.FragranceFamily</span>
                                }
                            | <i class="fas fa-weight-hanging me-1"></i> @product.Size
                        </p>

                        <!-- Description -->
                        <p class="card-text mb-3 flex-grow-1">
                            @(product.Description.Length > 100 ?
                                                    product.Description.Substring(0, 100) + "..." :
                                                    product.Description)
                    </p>

                            <!-- Price and Actions -->
                            <div class="d-flex justify-content-between align-items-center mt-auto">
                                <span class="h5 text-primary fw-bold">@product.Price.ToString("C")</span>
                                <div>
                                    <a asp-action="Details" asp-route-id="@product.Id"
                                       class="btn btn-sm btn-outline-primary me-2">
                                        <i class="fas fa-eye me-1"></i> Details
                                    </a>
                                    <button class="btn btn-sm btn-outline-success add-to-cart"
                                            data-product-id="@product.Id"
                                            data-product-name="@product.Name"
                                            data-product-price="@product.Price"
                                            @(product.StockQuantity <= 0 ? "disabled" : "")>
                                        <i class="fas fa-cart-plus me-1"></i> Add
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                }
        </div>

        <!-- Pagination -->
        <nav aria-label="Product pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchButton').click(searchProducts);
            $('#searchInput').keypress(function(e) {
                if (e.which === 13) searchProducts();
            });

            function searchProducts() {
                const searchTerm = $('#searchInput').val().trim();
                if (searchTerm) {
                    window.location.href = `?search=${encodeURIComponent(searchTerm)}`;
                } else {
                    window.location.href = '@Url.Action("Index")';
                }
            }

            // Add to cart functionality
            $('.add-to-cart').click(function() {
                const productId = $(this).data('product-id');
                const productName = $(this).data('product-name');
                const productPrice = $(this).data('product-price');

                // Get existing cart or initialize empty array
                let cart = JSON.parse(localStorage.getItem('perfumeCart')) || [];

                // Check if product already in cart
                const existingItem = cart.find(item => item.id === productId);

                if (existingItem) {
                    existingItem.quantity += 1;
                } else {
                    cart.push({
                        id: productId,
                        name: productName,
                        price: productPrice,
                        quantity: 1,
                        image: $(this).closest('.card').find('img').attr('src')
                    });
                }

                // Save updated cart
                localStorage.setItem('perfumeCart', JSON.stringify(cart));

                // Update UI
                updateCartCount();
                showToast(`${productName} added to cart!`, 'success');
            });

            function updateCartCount() {
                const cart = JSON.parse(localStorage.getItem('perfumeCart')) || [];
                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                $('.cart-counter').text(totalItems).addClass('animate__animated animate__bounceIn');
                setTimeout(() => $('.cart-counter').removeClass('animate__animated animate__bounceIn'), 1000);
            }

            function showToast(message, type) {
                // Using Toastr if available
                if (typeof toastr !== 'undefined') {
                    toastr[type](message, '', {
                        positionClass: "toast-bottom-right",
                        timeOut: 2000,
                        closeButton: true
                    });
                } else {
                    // Fallback to alert
                    alert(`${type.toUpperCase()}: ${message}`);
                }
            }

            // Initialize cart count on page load
            updateCartCount();
        });
    </script>

    <style>
        /* Card Styles */
        .perfume-card {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
            border-radius: 10px;
            overflow: hidden;
        }

            .perfume-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1);
                border-color: #dee2e6;
            }

        /* Image Container */
        .product-image-container {
            height: 250px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
            overflow: hidden;
        }

        .card-img-top {
            max-height: 100%;
            width: auto;
            object-fit: contain;
            transition: transform 0.5s ease;
        }

        .perfume-card:hover .card-img-top {
            transform: scale(1.05);
        }

        /* Typography */
        .card-title {
            color: #212529;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .text-primary {
            color: #0d6efd !important;
        }

        /* Buttons */
        .btn-outline-primary {
            color: #0d6efd;
            border-color: #0d6efd;
        }

            .btn-outline-primary:hover {
                background-color: #0d6efd;
                color: white;
            }

        .btn-outline-success {
            color: #198754;
            border-color: #198754;
        }

            .btn-outline-success:hover {
                background-color: #198754;
                color: white;
            }

        /* Badges */
        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
        }

        /* Pagination */
        .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .page-link {
            color: #0d6efd;
        }
    </style>
}