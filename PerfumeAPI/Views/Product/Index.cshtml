@model IEnumerable<PerfumeAPI.Models.Entities.Product>
@{
    ViewData["Title"] = "Our Fragrance Collection";
}

<div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-5 fw-bold">@ViewData["Title"]</h1>

        <!-- Sort Dropdown -->
        <div class="dropdown">
            <button class="btn btn-outline-dark dropdown-toggle" type="button" id="sortDropdown"
                    data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fas fa-sort me-1"></i> Sort By
            </button>
            <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                <li><a class="dropdown-item" href="?sort=name">Name (A-Z)</a></li>
                <li><a class="dropdown-item" href="?sort=price_asc">Price (Low to High)</a></li>
                <li><a class="dropdown-item" href="?sort=price_desc">Price (High to Low)</a></li>
                <li><a class="dropdown-item" href="?sort=newest">Newest First</a></li>
                <li><a class="dropdown-item" href="?sort=featured">Featured Items</a></li>
            </ul>
        </div>
    </div>

    <!-- Filter and Search Section -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search fragrances..." id="searchInput">
                <button class="btn btn-outline-secondary" type="button" id="searchButton">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
        <div class="col-md-6">
            <select class="form-select" id="fragranceFamilyFilter">
                <option value="">All Fragrance Families</option>
                @foreach (var family in ViewBag.AvailableFamilies as List<string> ?? new List<string>())
                {
                    <option value="@family">@family</option>
                }
            </select>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-warning text-center py-5">
            <i class="fas fa-exclamation-circle fa-3x mb-3 text-warning"></i>
            <h3>No Fragrances Found</h3>
            <p class="mb-0">We couldn't find any products matching your criteria.</p>
            <a href="@Url.Action("Index")" class="btn btn-outline-primary mt-3">
                <i class="fas fa-undo me-1"></i> Reset Filters
            </a>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var product in Model)
            {
                <div class="col mb-4">
                    <div class="card h-100 perfume-card shadow-sm">
                        <!-- Badges -->
                        @if (product.IsFeatured)
                        {
                            <span class="position-absolute top-0 end-0 badge bg-danger mt-2 me-2">
                                <i class="fas fa-crown me-1"></i> Featured
                            </span>
                        }
                        @if (product.IsLowStock)
                        {
                            <span class="position-absolute top-0 start-0 badge bg-warning text-dark mt-2 ms-2">
                                <i class="fas fa-exclamation-circle me-1"></i> Low Stock
                            </span>
                        }

                        <!-- Product Image -->
                        <div class="product-image-container">
                            <img src="@product.ImageUrl"
                                 class="card-img-top p-3"
                                 alt="@product.Name"
                                 loading="lazy"
                                 onerror="this.onerror=null;this.src='/images/default-perfume.jpg'">
                        </div>

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>

                            <!-- Rating -->
                            <div class="d-flex align-items-center mb-2">
                                @if (product.Comments?.Any() ?? false)
                                {
                                    var avgRating = product.Comments.Average(c => c.Rating);
                                    <div class="text-warning me-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(i <= avgRating ? "fas" : "far") fa-star"></i>
                                        }
                                    </div>
                                    <small class="text-muted">(@product.Comments.Count)</small>
                                }
                                else
                                {
                                    <small class="text-muted">No reviews yet</small>
                                }
                            </div>

                            <!-- Fragrance Details -->
                            <p class="card-text text-muted small mb-2">
                                <i class="fas fa-tag me-1"></i> @product.FragranceType
                                @if (!string.IsNullOrEmpty(product.FragranceFamily))
                                {
                                    <span> | @product.FragranceFamily</span>
                                }
                            | <i class="fas fa-weight-hanging me-1"></i> @product.Size
                        </p>

                        <!-- Description -->
                        <p class="card-text mb-3 flex-grow-1">
                            @(product.Description.Length > 100 ?
                                                    product.Description.Substring(0, 100) + "..." :
                                                    product.Description)
                    </p>

                            <!-- Price and Actions -->
                            <div class="d-flex justify-content-between align-items-center mt-auto">
                                <div>
                                    <span class="h5 text-primary fw-bold">@product.Price.ToString("C")</span>
                                    <p class="text-muted small mb-0">
                                        <i class="fas fa-shipping-fast me-1"></i>
                                @if (product.ShippingCost == 0)
                                        {
                                            <span class="text-success">Free shipping</span>
                                        }
                                        else
                                        {
                                            @product.ShippingCost.ToString("C")
                                        }
                                    </p>
                                </div>
                                <div>
                                    <a asp-action="Details" asp-route-id="@product.Id"
                                       class="btn btn-sm btn-outline-primary me-2">
                                        <i class="fas fa-eye me-1"></i> Details
                                    </a>
                                   <form method="post" asp-controller="Cart" asp-action="AddToCart" class="d-inline-block add-to-cart-form" data-product-id="@product.Id">
    @Html.AntiForgeryToken()
    <input type="hidden" name="productId" value="@product.Id" />
    <input type="hidden" name="quantity" value="1" />
    <button type="submit" class="btn btn-sm btn-outline-success add-to-cart-btn"
            data-product-name="@product.Name"
            data-product-price="@product.Price"
            @(product.StockQuantity <= 0 ? "disabled" : "")>
        <i class="fas fa-cart-plus me-1"></i> Add
    </button>
</form>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <nav aria-label="Product pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)&sort=@ViewBag.SortOrder&family=@ViewBag.CurrentFamily&search=@ViewBag.CurrentSearch">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i&sort=@ViewBag.SortOrder&family=@ViewBag.CurrentFamily&search=@ViewBag.CurrentSearch">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)&sort=@ViewBag.SortOrder&family=@ViewBag.CurrentFamily&search=@ViewBag.CurrentSearch">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize filter dropdown with current selection
            $('#fragranceFamilyFilter').val('@ViewBag.CurrentFamily');

            // Search functionality
            $('#searchButton').click(function() {
                const searchTerm = $('#searchInput').val().trim();
                const familyFilter = $('#fragranceFamilyFilter').val();
                window.location.href = `?search=${encodeURIComponent(searchTerm)}&family=${encodeURIComponent(familyFilter)}`;
            });

            // Filter change handler
            $('#fragranceFamilyFilter').change(function() {
                const familyFilter = $(this).val();
                const searchTerm = $('#searchInput').val().trim();
                window.location.href = `?family=${encodeURIComponent(familyFilter)}&search=${encodeURIComponent(searchTerm)}`;
            });

            // Add to cart functionality
            $('.add-to-cart').click(function() {
                const productId = $(this).data('product-id');
                const productName = $(this).data('product-name');
                const productPrice = $(this).data('product-price');

                $.post('/Cart/AddToCart', { productId: productId, quantity: 1 })
                    .done(function(response) {
                        updateCartCount(response.cartItemCount);

                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            html: `<strong>${productName}</strong><br>Price: ${productPrice.toFixed(2)}`,
                            toast: true,
                            position: 'bottom-end',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    })
                    .fail(function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Login Required',
                            text: 'Please sign in to add items to your cart',
                            confirmButtonText: 'Login',
                            showCancelButton: true
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/Identity/Account/Login?returnUrl=' + window.location.pathname;
                            }
                        });
                    });
            });

            // Update cart count in navbar
            function updateCartCount(count) {
                $('.cart-count').text(count).addClass('animate__animated animate__bounceIn');
                setTimeout(() => {
                    $('.cart-count').removeClass('animate__animated animate__bounceIn');
                }, 1000);
            }
        });
    </script>

    <style>
        .perfume-card {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
            border-radius: 10px;
        }

            .perfume-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            }

        .product-image-container {
            height: 250px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
            overflow: hidden;
        }

        .card-img-top {
            max-height: 100%;
            max-width: 100%;
            object-fit: contain;
            transition: transform 0.5s ease;
        }

        .perfume-card:hover .card-img-top {
            transform: scale(1.05);
        }

        .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        .page-link {
            color: #0d6efd;
        }

        .badge.bg-danger {
            background-color: #dc3545 !important;
        }

        .badge.bg-warning {
            background-color: #ffc107 !important;
        }
    </style>
}