@model PerfumeAPI.Models.Entities.Product

@{
    ViewData["Title"] = Model.Name;
}

<div class="container my-5">
    <div class="row">
        <div class="col-md-6">
            <img src="@Model.ImageUrl" class="img-fluid rounded" alt="@Model.Name">
        </div>
        <div class="col-md-6">
            <h1>@Model.Name</h1>
            <p class="text-muted">@Model.FragranceType | @Model.Size</p>

            <div class="mb-3">
                @{
                    var avgRating = Model.Comments?.Any() == true ? Model.Comments.Average(c => c.Rating) : 0;
                    var reviewCount = Model.Comments?.Count ?? 0;
                }
                <div class="rating mb-2">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <span class="@(i <= Math.Round(avgRating) ? "text-warning" : "text-secondary")">
                            <i class="fas fa-star"></i>
                        </span>
                    }
                    <span class="ms-2">(@reviewCount review@(reviewCount == 1 ? "" : "s"))</span>
                </div>
            </div>

            <p class="lead">@Model.Description</p>

            <div class="d-flex align-items-center mb-4">
                <span class="h3 me-3">@Model.Price.ToString("C")</span>
                <span class="text-muted">+ @Model.ShippingCost.ToString("C") shipping</span>
            </div>

            <div class="d-flex mb-4">
                <div class="input-group me-3" style="width: 120px;">
                    <button class="btn btn-outline-secondary decrement" type="button">-</button>
                    <input type="text" class="form-control text-center quantity" value="1">
                    <button class="btn btn-outline-secondary increment" type="button">+</button>
                </div>
                <button class="btn btn-primary add-to-cart" data-id="@Model.Id">
                    <i class="fas fa-cart-plus me-2"></i>Add to Cart
                </button>
            </div>

            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Product Details</h5>
                    <ul class="list-unstyled">
                        <li><strong>Fragrance Type:</strong> @Model.FragranceType</li>
                        <li><strong>Size:</strong> @Model.Size</li>
                        <li><strong>Shipping:</strong> @Model.ShippingCost.ToString("C")</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-12">
            <h3>Customer Reviews</h3>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Add Your Review</h5>
                        <form asp-action="AddComment" method="post">
                            <input type="hidden" name="productId" value="@Model.Id">
                            <div class="mb-3">
                                <label class="form-label">Rating</label>
                                <div class="rating-input">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="far fa-star" data-rating="@i"></i>
                                    }
                                    <input type="hidden" name="rating" id="selectedRating" value="5">
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Review</label>
                                <textarea name="text" class="form-control" rows="3" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Submit Review</button>
                        </form>
                    </div>
                </div>
            }

            @if (Model.Comments?.Any() == true)
            {
                foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <h5>@comment.User.UserName</h5>
                                <div class="text-warning">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="@(i <= comment.Rating ? "fas" : "far") fa-star"></i>
                                    }
                                </div>
                            </div>
                            <p class="text-muted small">@comment.CreatedAt.ToString("MMMM dd, yyyy")</p>
                            <p>@comment.Text</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">No reviews yet. Be the first to review!</div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.increment').click(function () {
                const $input = $(this).siblings('.quantity');
                let value = parseInt($input.val()) || 1;
                $input.val(value + 1);
            });

            $('.decrement').click(function () {
                const $input = $(this).siblings('.quantity');
                let value = parseInt($input.val()) || 1;
                if (value > 1) $input.val(value - 1);
            });

            $('.rating-input i').hover(function () {
                const rating = $(this).data('rating');
                $(this).prevAll().addBack().removeClass('far').addClass('fas');
                $(this).nextAll().removeClass('fas').addClass('far');
            });

            $('.rating-input i').click(function () {
                const rating = $(this).data('rating');
                $('#selectedRating').val(rating);
            });

            $('.add-to-cart').click(function () {
                const productId = $(this).data('id');
                const quantity = parseInt($('.quantity').val()) || 1;

                $.post('/api/cart', { productId: productId, quantity: quantity })
                    .done(function () {
                        toastr.success('Added to cart!');
                        updateCartCount();
                    })
                    .fail(function () {
                        toastr.error('Please log in to add items to your cart.');
                        window.location.href = '/Account/Login?returnUrl=' + encodeURIComponent(window.location.pathname);
                    });
            });

            function updateCartCount() {
                $.get('/api/cart/count', function (data) {
                    $('.cart-count').text(data.count);
                });
            }
        });
    </script>
}
